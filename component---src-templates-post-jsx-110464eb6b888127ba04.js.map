{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["PostTemplate","props","postNode","data","markdownRemark","post","frontmatter","fields","postDate","dayjs","date","format","postDateTime","console","log","title","config","siteTitle","postPath","slug","postSEO","className","cover","fluid","childImageSharp","dateTime","categories","map","categorie","key","to","tags","tag","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"6FAAA,kMA2DeA,UAlDf,SAAsBC,GAAQ,IAEtBC,EADWD,EAATE,KACcC,eACDC,EAAiBH,EAA9BI,YAAmBC,EAAWL,EAAXK,OACrBC,EAAWC,IAAMJ,EAAKK,MAAMC,OAAO,gBACnCC,EAAeH,IAAMJ,EAAKK,MAAMC,OAAO,cAG7C,OAFAE,QAAQC,IAAIT,GAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQU,MAAUV,EAAKU,MAAV,MAAqBC,IAAOC,YACzC,kBAAC,IAAD,CAAKC,SAAUX,EAAOY,KAAMjB,SAAUA,EAAUkB,SAAO,IACvD,6BAASC,UAAU,oCAChBhB,EAAKiB,MACJ,yBAAKD,UAAU,mBACb,kBAAC,IAAD,CAAaE,MAAOlB,EAAKiB,MAAME,gBAAgBD,SAE/C,KACJ,yBAAKF,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iCACb,0BAAMI,SAAUb,GAAeJ,IAEjC,0BAAMa,UAAU,gBAChB,wBAAIA,UAAU,gEACXhB,EAAKqB,WAAWC,KAAI,SAAAC,GAAS,OAC5B,wBAAIC,IAAKD,GACP,kBAAC,OAAD,CAAME,GAAG,KAAKF,SAKtB,yBAAKP,UAAU,mBACb,4BAAKhB,EAAKU,QAEZ,wBAAIM,UAAU,oDACXhB,EAAK0B,KAAKJ,KAAI,SAAAK,GAAG,OAChB,wBAAIH,IAAKG,GACP,kBAAC,OAAD,CAAMF,GAAG,KAAKE,SAKtB,yBAAKX,UAAU,eAAeY,wBAAyB,CAAEC,OAAQhC,EAASiC,WAS3E,IAAMC,EAAS","file":"component---src-templates-post-jsx-110464eb6b888127ba04.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql, Link } from 'gatsby';\nimport GatsbyImage from 'gatsby-image';\nimport dayjs from 'dayjs';\nimport { MainLayout } from '../layout';\nimport { SEO } from '../components';\nimport config from '../../data/SiteConfig';\n\nfunction PostTemplate(props) {\n  const { data } = props;\n  const postNode = data.markdownRemark;\n  const { frontmatter: post, fields } = postNode;\n  const postDate = dayjs(post.date).format('MMMM D, YYYY');\n  const postDateTime = dayjs(post.date).format('YYYY-MM-DD');\n  console.log(post);\n\n  return (\n    <MainLayout>\n      <Helmet title={`${post.title} â€“ ${config.siteTitle}`} />\n      <SEO postPath={fields.slug} postNode={postNode} postSEO />\n      <article className=\"main-post container-md px-3 py-4\">\n        {post.cover ? (\n          <div className=\"post-cover mb-8\">\n            <GatsbyImage fluid={post.cover.childImageSharp.fluid} />\n          </div>\n        ) : null}\n        <div className=\"post-header mb-6\">\n          <div className=\"post-meta my-3\">\n            <div className=\"post-meta__date alt-mono-font\">\n              <time dateTime={postDateTime}>{postDate}</time>\n            </div>\n            <span className=\"spacer-line\"></span>\n            <ul className=\"post-meta__categories d-flex flex-items-center alt-mono-font\">\n              {post.categories.map(categorie => (\n                <li key={categorie}>\n                  <Link to=\"/\">{categorie}</Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"post-title my-2\">\n            <h1>{post.title}</h1>\n          </div>\n          <ul className=\"post-tags d-flex flex-items-center alt-mono-font\">\n            {post.tags.map(tag => (\n              <li key={tag}>\n                <Link to=\"/\">{tag}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: postNode.html }} />\n      </article>\n      {/* <UserInfo config={config} />  */}\n    </MainLayout>\n  );\n}\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html,\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        slug\n        date\n        categories\n        tags\n        template\n      }\n      fields {\n        slug\n        date\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}